{"version":3,"sources":["item/item.styles.ts","item/item.tsx","CartItem/CartItem.styles.ts","CartItem/CartItem.tsx","Form/Field.tsx","Form/Register.styles.ts","Form/RegisterForm.tsx","Util/Resizing.ts","Form/Form.styles.ts","Form/Form.tsx","Cart/Cart.styles.ts","Cart/Cart.tsx","Image/package.jpg","Image/jollof.jpg","Image/fried.jpg","Image/coleslaw.jpg","Image/turkey.jpg","Image/meat.jpg","Image/zobo.jpg","Data-Mock/DataList.ts","App.styles.ts","App.tsx","index.tsx"],"names":["Wrapper","styled","div","Item","item","handleAddToCart","src","image","alt","title","description","price","Button","onClick","CartItem","addToCart","removeFromCart","className","amount","toFixed","size","disableElevation","variant","id","MyField","placeholder","field","TextField","FormWrapper","RegisterForm","onSubmit","useState","isVerified","setIsVerified","recaptureLoaded","console","log","initialValues","name","email","phoneNumber","values","length","alert","component","sitekey","render","onloadCallback","verifyCallback","response","color","type","device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","Form","totalMoney","cartItems","handleReset","changeState","a","reserveData","map","listData","JSON","stringify","newData","message_html","emailjs","send","from_name","reply_to","then","result","text","to_name","reply_from","error","aside","Cart","calculateTotal","items","reduce","ack","isModalVisible","setIsModalVisible","transactionComplete","setTransactionComplete","toggleModal","wasModalVisible","style","fontSize","rawData","category","packagerice","jollof","fried","turkey","meat","coleslaw","zobo","StyledButton","IconButton","getProducts","App","cartOpen","setCartOpen","setCartItems","useQuery","data","isLoading","clickedItem","prev","find","LinearProgress","AppBar","position","Toolbar","Typography","noWrap","Badge","badgeContent","Drawer","anchor","open","onClose","Grid","container","spacing","xs","sm","client","QueryClient","ReactDOM","QueryClientProvider","document","getElementById"],"mappings":"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","file":"static/js/main.8e89e383.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  border: 1px solid lightblue;\r\n  border-radius: 20px;\r\n  height: 100%;\r\n\r\n  button {\r\n    border-radius: 0 0 20px 20px;\r\n  }\r\n\r\n  img {\r\n    max-height: 350px;\r\n    object-fit: cover;\r\n    border-radis: 20px 20px 0 0;\r\n  }\r\n\r\n  div{\r\n      font-family: Arial, Helvetica, sans-serif;\r\n      padding: 1rem;\r\n      height: 100%;\r\n  }\r\n`;\r\n","import Button from \"@material-ui/core/Button\"\r\n//types\r\nimport { CartItemType } from '../type'\r\n\r\n//styles\r\nimport {Wrapper} from \"./item.styles\"\r\n\r\ntype Props={\r\n    item:CartItemType,\r\n    handleAddToCart:(clickedItem:CartItemType)=>void;\r\n}\r\n\r\nconst Item:React.FC<Props>=({item,handleAddToCart})=>(\r\n    <Wrapper>\r\n        <img src={item.image} alt={item.title}/>\r\n        <div>\r\n            <h3>{item.title}</h3>\r\n            <p>{item.description}</p>\r\n            <h3>â‚¬{item.price}</h3>\r\n        </div>\r\n\r\n        <Button onClick={()=>handleAddToCart(item)}>Add to Cart</Button>\r\n    </Wrapper>\r\n)\r\n\r\nexport default Item;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  border-bottom: 1px solid lightblue;\r\n  padding-bottom: 20px;\r\n \r\n  div {\r\n    flex: 1;\r\n  }\r\n\r\n  .informationn,\r\n  .button {\r\n    display: Flex;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  img {\r\n    max-width: 200px;\r\n    object-fit: cover;\r\n    margin-left: 40px;\r\n    padding-top: 20px;\r\n  }\r\n`;\r\n","import Button from \"@material-ui/core/Button\";\r\n\r\n//types\r\nimport { CartItemType } from \"../type\";\r\n\r\n//styles\r\nimport { Wrapper } from \"./CartItem.styles\";\r\n\r\ntype Props = {\r\n  item: CartItemType;\r\n  addToCart: (clickedItem: CartItemType) => void;\r\n  removeFromCart: (id: number) => void;\r\n  \r\n};\r\n\r\nconst CartItem: React.FC<Props> = ({ item, addToCart, removeFromCart }) => (\r\n  <Wrapper>\r\n    <div>\r\n      <h3>{item.title}</h3>\r\n      <div className=\"information\">\r\n        <p>Price : â‚¬{item.price} / pk</p>\r\n        <p>Total : â‚¬{(item.amount * item.price).toFixed(2)}</p>\r\n      </div>\r\n      <div className='buttons'>\r\n        <Button\r\n          size=\"small\"\r\n          disableElevation\r\n          variant=\"contained\"\r\n          onClick={() => removeFromCart(item.id)}\r\n        >\r\n          -\r\n        </Button>\r\n        <p>{item.amount}</p>\r\n        <Button\r\n          size=\"small\"\r\n          disableElevation\r\n          variant=\"contained\"\r\n          onClick={() => addToCart(item)}\r\n        >\r\n          +\r\n        </Button>\r\n        \r\n      </div>\r\n    </div>\r\n    <img src={item.image} alt={item.title} />\r\n  </Wrapper>\r\n);\r\n\r\nexport default CartItem;\r\n","import { TextField } from \"@material-ui/core\";\r\nimport { FieldProps } from \"formik\";\r\nimport React from \"react\";\r\n\r\n\r\ninterface Props extends FieldProps {\r\n  placeholder: string;\r\n}\r\n\r\nexport const MyField: React.FC<Props> = ({ placeholder, field }) => {\r\n  return <TextField  placeholder={placeholder} {...field} />;\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const FormWrapper = styled.div`\r\n\r\n.checkout {\r\n    padding-top: 40px;\r\n    justify-items: center;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    color: ;\r\n  }\r\ndiv{\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    padding: 0.3rem;\r\n  \r\n}\r\n`","import React, { useState } from \"react\";\r\nimport { MyField } from \"./Field\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Recaptcha from \"react-recaptcha\";\r\n//stytles\r\nimport { FormWrapper } from \"./Register.styles\";\r\n\r\ninterface Values {\r\n  name: string;\r\n  email: string;\r\n  phoneNumber: string;\r\n}\r\ninterface Props {\r\n  onSubmit: (values: Values) => void;\r\n}\r\n\r\n\r\nexport const RegisterForm: React.FC<Props> = ({ onSubmit }) => {\r\n  const [isVerified, setIsVerified] = useState(false);\r\n const  recaptureLoaded=()=>{\r\n    console.log('recaptcha is loaded')\r\n}\r\n\r\n  return (\r\n    <FormWrapper>\r\n      <Formik\r\n        initialValues={{\r\n          name: \"\",\r\n        email: \"\",\r\n          phoneNumber: \"\",\r\n        }}\r\n        onSubmit={(values) => {\r\n          if (\r\n            values.email.length > 0 &&\r\n            values.name.length > 0 &&\r\n         \r\n            values.phoneNumber.length > 0\r\n          ) {\r\n            if (isVerified) {\r\n              onSubmit(values);\r\n              \r\n            } else {\r\n              alert(\"Please verify that you are human\");\r\n            }\r\n          } else {\r\n            alert(\"Field must not be empty\");\r\n          }\r\n        }}\r\n      >\r\n        {({ values }) => (\r\n          <Form>\r\n            <div>\r\n              <Field\r\n                name=\"name\"\r\n                placeholder=\"Name\"\r\n                component={MyField}\r\n              />\r\n            </div>\r\n            \r\n\r\n            <div>\r\n              <Field name=\"email\" placeholder=\"Email\" component={MyField} />\r\n            </div>\r\n\r\n            <div>\r\n              <Field\r\n                name=\"phoneNumber\"\r\n                placeholder=\"Phone number\"\r\n                component={MyField}\r\n              />\r\n            </div>\r\n            <Recaptcha\r\n              sitekey=\"6LcqU8caAAAAAHnx69OnCW6o4wELbX5pwYQEGyIC\"\r\n              render=\"explicit\"\r\n              onloadCallback={recaptureLoaded}\r\n              verifyCallback={(response)=>{\r\n                if(response){\r\n                    setIsVerified(true);\r\n                }\r\n              }}\r\n            />\r\n            <div className=\"checkout\">\r\n              <Button\r\n                size=\"large\"\r\n                disableElevation\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n              >\r\n                Send\r\n              </Button>\r\n            </div>\r\n           \r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </FormWrapper>\r\n  );\r\n};\r\n","const size = {\r\n    mobileS: '320px',\r\n    mobileM: '375px',\r\n    mobileL: '425px',\r\n    tablet: '768px',\r\n    laptop: '1024px',\r\n    laptopL: '1440px',\r\n    desktop: '2560px'\r\n  }\r\n  export const device = {\r\n    mobileS: `(min-width: ${size.mobileS})`,\r\n    mobileM: `(min-width: ${size.mobileM})`,\r\n    mobileL: `(min-width: ${size.mobileL})`,\r\n    tablet: `(min-width: ${size.tablet})`,\r\n    laptop: `(min-width: ${size.laptop})`,\r\n    laptopL: `(min-width: ${size.laptopL})`,\r\n    desktop: `(min-width: ${size.desktop})`,\r\n    desktopL: `(min-width: ${size.desktop})`\r\n  };","import styled from \"styled-components\";\r\nimport { device } from \"../Util/Resizing\";\r\n\r\n\r\nexport const Wrapper = styled.div`\r\n@media ${(device.mobileL, device.mobileM, device.mobileS)} {\r\n    min-width: 340px;\r\n  }\r\n\r\n  @media ${(device.desktop, device.laptop, device.tablet)} {\r\n    min-width: 500px;\r\n  }\r\n`\r\n","import React from \"react\";\r\nimport { RegisterForm } from \"../Form/RegisterForm\";\r\n//styles\r\nimport { Wrapper } from \"./Form.styles\";\r\n//types\r\nimport { CartItemType } from \"../type\";\r\nimport emailjs from \"emailjs-com\";\r\n\r\ntype Props = {\r\n  totalMoney: string;\r\n  cartItems: CartItemType[];\r\n  handleReset: () => void;\r\n  changeState: () => void;\r\n};\r\n\r\nexport const Form: React.FC<Props> = ({\r\n  totalMoney,\r\n  cartItems,\r\n  handleReset,\r\n  changeState,\r\n}) => {\r\n  //  const  sendFeedback =(templateId, variables)=> {\r\n  //   window.emailjs.send(\r\n  //     'gmail', templateId,\r\n  //     variables\r\n  //     ).then(res => {\r\n  //       console.log('Email successfully sent!')\r\n  //     })\r\n  //     // Handle errors here however you like, or use a React error boundary\r\n  //     .catch(err => console.error('Oh well, you failed. Here some thoughts on the error that occured:', err))\r\n  //   }\r\n  return (\r\n    <Wrapper>\r\n      <div>\r\n        <p>Add your contact details</p>\r\n      </div>\r\n      <RegisterForm\r\n        onSubmit={async ({ email, name, phoneNumber }) => {\r\n          const reserveData = cartItems?.map((item) => {\r\n            const listData = {\r\n              title: item.title,\r\n              amount: item.amount,\r\n              price: item.price,\r\n            };\r\n            const arrayMessage = JSON.stringify(listData, null, \"...\");\r\n\r\n            return arrayMessage;\r\n          });\r\n\r\n          const newData = {\r\n            reserveData,\r\n            phoneNumber: phoneNumber,\r\n            totalMoney: totalMoney,\r\n          };\r\n          const message_html = JSON.stringify(newData, null, \"...\");\r\n\r\n          await emailjs\r\n            .send(\r\n              \"gmail\",\r\n              \"template_AyrkteIw\",\r\n              {\r\n                message_html: message_html,\r\n                from_name: name,\r\n                reply_to: email,\r\n              },\r\n              \"user_463EFIKesNAfVPVbvE68o\"\r\n            )\r\n            .then(\r\n              (result) => {\r\n                console.log(result.text);\r\n                emailjs.send(\r\n                  \"gmail\",\r\n                  \"template_8qvi2ln\",\r\n                  {\r\n                    to_name: name,\r\n                    reply_from:email,\r\n                    reply_to: \"noreply@kramitastbytes.com\",\r\n                  },\r\n                  \"user_463EFIKesNAfVPVbvE68o\"\r\n                );\r\n              },\r\n              (error) => {\r\n                console.log(error.text);\r\n              }\r\n            );\r\n          changeState();\r\n          handleReset();\r\n        }}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport { device } from \"../Util/Resizing\";\r\n\r\nexport const Wrapper = styled.aside`\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  padding: 20px;\r\n\r\n  @media ${(device.mobileL, device.mobileM, device.mobileS)} {\r\n    max-width: 340px;\r\n  }\r\n\r\n  @media ${(device.desktop, device.laptop, device.tablet)} {\r\n    min-width: 500px;\r\n  }\r\n\r\n  .checkout {\r\n    padding-top: 40px;\r\n    justify-items: center;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n   \r\n  }\r\n  \r\n  .change {\r\n    padding-top: 40px;\r\n    justify-items: center;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n`;\r\n","import CartItem from \"../CartItem/CartItem\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport React, { useState } from \"react\";\r\nimport { Form } from \"../Form/Form\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\n//types\r\nimport { CartItemType } from \"../type\";\r\n\r\n//styles\r\nimport { Wrapper } from \"./Cart.styles\";\r\n\r\ntype Props = {\r\n  cartItems: CartItemType[];\r\n  addToCart: (clickedItem: CartItemType) => void;\r\n  removeFromCart: (id: number) => void;\r\n  handleReset: () => void;\r\n};\r\n\r\nconst Cart: React.FC<Props> = ({\r\n  cartItems,\r\n  addToCart,\r\n  removeFromCart,\r\n  handleReset,\r\n}) => {\r\n  const calculateTotal = (items: CartItemType[]) =>\r\n    items.reduce((ack: number, item) => ack + item.amount * item.price, 0);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [transactionComplete, setTransactionComplete] = useState(false);\r\n  const toggleModal = () => {\r\n    setIsModalVisible((wasModalVisible) => !wasModalVisible);\r\n  };\r\n  const changeState = () => {\r\n    setTransactionComplete(true);\r\n  };\r\n\r\n  if (transactionComplete) {\r\n    return (\r\n      <Wrapper>\r\n        {\" \"}\r\n        <div className=\"change\">\r\n          <div><CheckCircleIcon color=\"primary\" style={{fontSize:60}}/></div>\r\n          <div>Thank you, we will contact you to confirm your reservation</div>\r\n        </div>\r\n      </Wrapper>\r\n    );\r\n  }\r\n\r\n  if (isModalVisible) {\r\n    return (\r\n      <Wrapper>\r\n        <div onClick={toggleModal}>\r\n          <ArrowBackIcon color=\"primary\" />\r\n          <h2>Total: â‚¬{calculateTotal(cartItems).toFixed(2)}</h2>\r\n        </div>\r\n        <div>\r\n          <Form\r\n            totalMoney={calculateTotal(cartItems).toFixed(2)}\r\n            cartItems={cartItems}\r\n            handleReset={handleReset}\r\n            changeState={changeState}\r\n          />\r\n        </div>\r\n      </Wrapper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <h2>Your Shopping Cart</h2>\r\n      {cartItems.length === 0 ? (\r\n        <div>\r\n          <p>No items in Cart.</p>\r\n          <p>Add to cart to reserve order.</p>{\" \"}\r\n        </div>\r\n      ) : null}\r\n      {cartItems.map((item) => (\r\n        <CartItem\r\n          key={item.id}\r\n          item={item}\r\n          addToCart={addToCart}\r\n          removeFromCart={removeFromCart}\r\n        />\r\n      ))}\r\n      <h2>Total: â‚¬{calculateTotal(cartItems).toFixed(2)}</h2>\r\n      <div className=\"checkout\">\r\n        {cartItems.length === 0 ? null : (\r\n          <Button\r\n            size=\"large\"\r\n            disableElevation\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            onClick={toggleModal}\r\n          >\r\n            Checkout To Reserve\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","export default __webpack_public_path__ + \"static/media/package.dc7690cf.jpg\";","export default __webpack_public_path__ + \"static/media/jollof.b66745be.jpg\";","export default __webpack_public_path__ + \"static/media/fried.8daf6498.jpg\";","export default __webpack_public_path__ + \"static/media/coleslaw.b381bfe8.jpg\";","export default __webpack_public_path__ + \"static/media/turkey.c80dfa07.jpg\";","export default __webpack_public_path__ + \"static/media/meat.23f5c7de.jpg\";","export default __webpack_public_path__ + \"static/media/zobo.be2d965c.jpg\";","import { of } from \"rxjs\";\r\nimport { delay } from \"rxjs/operators\";\r\nimport packagerice from \"../Image/package.jpg\";\r\nimport jollof from \"../Image/jollof.jpg\";\r\nimport fried from \"../Image/fried.jpg\";\r\nimport coleslaw from \"../Image/coleslaw.jpg\";\r\nimport turkey from \"../Image/turkey.jpg\";\r\nimport meat from \"../Image/meat.jpg\";\r\nimport zobo from \"../Image/zobo.jpg\";\r\n\r\nconst messagesList = [\r\n  {\r\n    id: 1,\r\n    category: \"Food\",\r\n    description: \"The Kramitastybyte package consiste of Jollof rice, coleslaw, peppered turkey, peppered meat, puff puff and zobo \",\r\n    image: packagerice,\r\n    price: 15,\r\n    title: \"Kramitastybites Package\",\r\n    amount: 0,\r\n  },\r\n  {\r\n    id: 2,\r\n    category: \"Food\",\r\n    description: \"African Jollof\",\r\n    image: jollof,\r\n    price: 8,\r\n    title: \"Jollof Rice\",\r\n    amount: 0,\r\n  },\r\n  {\r\n    id: 3,\r\n    category: \"Food\",\r\n    description: \"Fried Rice\",\r\n    image: fried,\r\n    price: 8,\r\n    title: \"Fried Rice\",\r\n    amount: 0,\r\n  },\r\n  {\r\n    id: 4,\r\n    category: \"Meat\",\r\n    description: \"Peppered Turkey\",\r\n    image: turkey,\r\n    price: 4,\r\n    title: \"Peppered Turkey\",\r\n    amount: 0,\r\n  },\r\n  {\r\n    id: 5,\r\n    category: \"Meat\",\r\n    description: \"Jollof Rice\",\r\n    image: meat,\r\n    price: 5,\r\n    title: \"Peppered Beef\",\r\n    amount: 0,\r\n  },\r\n  {\r\n    id: 6,\r\n    category: \"Salad\",\r\n    description: \"Coleslaw\",\r\n    image: coleslaw,\r\n    price: 2,\r\n    title: \"Coleslaw\",\r\n    amount: 0,\r\n  },\r\n  {\r\n    id: 7,\r\n    category: \"Drinks\",\r\n    description: \"Zobo\",\r\n    image: zobo,\r\n    price: 3,\r\n    title: \"Zobo\",\r\n    amount: 0,\r\n  },\r\n];\r\nexport const rawData = [...messagesList];\r\nexport const getDataList = () => of(rawData).pipe(delay(200));\r\n","import styled from \"styled-components\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nexport const Wrapper = styled.div`\r\n  margin: 40px;\r\n`;\r\n\r\nexport const StyledButton = styled(IconButton)`\r\n  position: fixed;\r\n  display:flex;\r\n  z-index: 100;\r\n  right: 20px;\r\n  top: 20px;\r\n  color:black;\r\n`;\r\n","import { useState } from \"react\";\nimport { useQuery } from \"react-query\";\n//components\nimport Item from \"./item/item\";\nimport Cart from \"./Cart/Cart\";\nimport { rawData } from \"./Data-Mock/DataList\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AddShoppingCartIcon from \"@material-ui/icons/AddShoppingCart\";\nimport Badge from \"@material-ui/core/Badge\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\n\n//types\nimport { CartItemType } from \"./type\";\n\n//styles\nimport { Wrapper, StyledButton } from \"./App.styles\";\n\nconst getProducts = async (): Promise<CartItemType[]> => await await rawData;\n// const getProducts = async (): Promise<CartItemType[]> =>\n//   await (await fetch(\"https://fakestoreapi.com/products\")).json();\n\nconst App = () => {\n  const [cartOpen, setCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([] as CartItemType[]);\n  const { data, isLoading, error } = useQuery<CartItemType[]>(\n    \"product\",\n    getProducts\n  );\n\n\n  const getTotalItems = (items: CartItemType[]) =>\n    items.reduce((ack: number, item) => ack + item.amount, 0);\n\n  const handleAddToCart = (clickedItem: CartItemType) => {\n    setCartItems((prev) => {\n      //is the item already added to cart?\n      const isItemInCart = prev.find((item) => item.id === clickedItem.id);\n\n      if (isItemInCart) {\n        return prev.map((item) =>\n          item.id === clickedItem.id\n            ? { ...item, amount: item.amount + 1 }\n            : item\n        );\n      }\n      //first time item is added\n      return [...prev, { ...clickedItem, amount: 1 }];\n    });\n  };\n  const handleRemoveFromCart = (id: number) => {\n    setCartItems((prev) =>\n      prev.reduce((ack, item) => {\n        if (item.id === id) {\n          if (item.amount === 1) return ack;\n          return [...ack, { ...item, amount: item.amount - 1 }];\n        } else {\n          return [...ack, item];\n        }\n      }, [] as CartItemType[])\n    );\n  };\n\n  const handleReset=()=>{\n    setCartItems([])\n  }\n\n  if (isLoading) return <LinearProgress />;\n  if (error) return <div>Something went wrong</div>;\n\n  return (\n    <div>\n      <div>\n      <AppBar position=\"static\">\n      <Toolbar>\n      <Typography  variant=\"h6\" noWrap>\n              KRAMITATSYBITES\n            </Typography>\n            <StyledButton onClick={() => setCartOpen(true)}>\n      <Badge badgeContent={getTotalItems(cartItems)} color=\"error\">\n        <AddShoppingCartIcon />\n      </Badge>\n    </StyledButton>\n      </Toolbar>\n       \n        </AppBar>\n      </div>\n   \n     \n    <Wrapper>\n     \n      <Drawer anchor=\"right\" open={cartOpen} onClose={() => setCartOpen(false)}>\n        <Cart\n          cartItems={cartItems}\n          addToCart={handleAddToCart}\n          removeFromCart={handleRemoveFromCart}\n          handleReset={handleReset}\n        />\n      </Drawer>\n    \n      <Grid container spacing={3}>\n        {data?.map((item) => (\n          <Grid item key={item.id} xs={12} sm={4}>\n            <Item item={item} handleAddToCart={handleAddToCart} />\n          </Grid>\n        ))}\n      </Grid>\n     \n    </Wrapper>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport {QueryClient, QueryClientProvider} from \"react-query\";\n\nconst client = new QueryClient();\n\nReactDOM.render(\n  <QueryClientProvider client={client}>\n<App />\n  </QueryClientProvider>\n  ,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}